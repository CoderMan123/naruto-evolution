name: Release

on:
  release:
    types: [published]

env:
  BYOND_VERSION: "514.1589"
  REGISTRY: docker.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
          lfs: true
      
      - name: Build application
        run: |
          docker run -v ${{ github.workspace }}:${{ github.workspace }} douglasparker/byond:$BYOND_VERSION DreamMaker "${{ github.workspace }}/naruto-evolution.dme"
          echo "${{ github.event.release.tag_name }}" > "${{ github.workspace }}/VERSION"

          if [ ${{ github.event.release.action == 'prereleased' }} ]; then
            echo "PRERELEASE" > "${{ github.workspace }}/PRERELEASE"
          fi

      - name: Login to the Docker Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      
      - name: Extract repository metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
      
      - name: Build the Docker image and publish to the Docker Registry
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      
      - name: Install Changelog Parser
        run: |
          sudo git clone https://github.com/douglasparker/changelog-parser.git /changelog-parser
          sudo chmod +x /changelog-parser/changelog-parser.py
      
      - name: Edit the pre-release to exclude release notes
        if: github.event.release.prerelease
        run: |
          gh auth login --with-token <<< ${{ secrets.ACTIONS }}
          gh release edit ${{ github.event.release.tag_name }} --notes "## [${{ github.event.release.tag_name }}] $(date +"%Y-%m-%d")
          *Release notes are not provided for pre-releases.*"
      
      - name: Publish release notes to Discord
        # Code Blocks are defined using variables to prevent backticks being interpreted as command substitution.
        # ${{ github.event.release.body }} does not contain the updated description from running `gh release edit` in a prior job.
        run: |
          CODE_START='```markdown\n'
          CODE_END='\n```'

          RELEASE_NOTES=$(cat << EOF
          **${{ github.event.release.tag_name }}**

          ${CODE_START}
          ${{ github.event.release.body }}
          ${CODE_END}
          EOF
          )

          curl -H "Content-Type: application/json" -d "{\"username\": \"GitHub\", \"content\": \"${RELEASE_NOTES}\"}" ${{ secrets.DISCORD_WEBHOOK_RELEASE_URL }}
      
      - name: Deploy the Docker image to the server
        if: github.event.release.prerelease == false
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            docker run --rm \
              -v /var/run/docker.sock:/var/run/docker.sock \
              -v /root/.docker/config.json:/config.json:ro \
              -e WATCHTOWER_NOTIFICATIONS=slack \
              -e WATCHTOWER_NOTIFICATION_SLACK_IDENTIFIER="Watchtower" \
              -e WATCHTOWER_NOTIFICATION_SLACK_HOOK_URL="${{ secrets.WATCHTOWER_NOTIFICATION_SLACK_HOOK_URL }}" \
              containrrr/watchtower naruto-evolution --run-once --cleanup --include-restarting
